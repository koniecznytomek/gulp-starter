{"version":3,"sources":["_mixins.scss","styles.min.css","_fonts.scss","_layout.scss","styles.scss"],"names":[],"mappings":"AA8BE,WACE,eAAuB,CACvB,gHAE8C,CAE9C,eAPyC,CAQzC,iBChCJ,CCHA,GACI,0BAA8B,CFsD5B,cChDN,CDiDM,oCAFF,GAGI,8CCzCN,CACF,CD0CM,qCALF,GAMI,cCtCN,CACF,CEzBA,KACE,eF4BF,CGxBA,SACI,UH2BJ","file":"styles.min.css","sourcesContent":["// =============================================================================\n// CSS Gid Layout\n// =============================================================================\n\n@mixin grid($spans: 12, $rows: 1) {\n  display: grid;\n  grid-template-columns: repeat($spans, 1fr);\n  grid-template-rows: repeat($rows, 1fr);\n}\n\n// =============================================================================\n// Media query\n// =============================================================================\n\n@mixin mq($breakpoint) {\n  @if map-has-key($breakpoints, $breakpoint) {\n    @media (max-width: map-get($breakpoints, $breakpoint)) {\n      @content;\n    }\n  } @else {\n    @warn \"Unfortunately, no value could be retrieved from `#{$breakpoint}`. \"\n        + \"Available breakpoints are: #{map-keys($breakpoints)}.\";\n  }\n}\n\n// =============================================================================\n// Font Face\n// =============================================================================\n\n@mixin fontface($name, $file, $weight: normal, $style: normal) {\n  @font-face {\n    font-family: \"#{$name}\";\n    src: url('./fonts/#{$file}.woff2') format('woff'),\n    url('./fonts/#{$file}.woff') format('woff'),\n    url('./fonts/#{$file}.ttf') format('truetype');\n\n    font-weight: $weight;\n    font-style: $style;\n  }\n}\n\n// =============================================================================\n// Font Size Fluid\n// =============================================================================\n\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n@mixin font-size-fluid($min-vw, $max-vw, $min-font-size, $max-font-size) {\n  $u1: unit($min-vw);\n  $u2: unit($max-vw);\n  $u3: unit($min-font-size);\n  $u4: unit($max-font-size);\n\n  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\n    & {\n      font-size: $min-font-size;\n      @media screen and (min-width: $min-vw) {\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\n      }\n      @media screen and (min-width: $max-vw) {\n        font-size: $max-font-size;\n      }\n    }\n  }\n}\n","@font-face {\n  font-family: \"f37\";\n  src: url(\"./fonts/f37.woff2\") format(\"woff\"), url(\"./fonts/f37.woff\") format(\"woff\"), url(\"./fonts/f37.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\nh1 {\n  font-family: 'f37', sans-serif;\n}\n\nh1 {\n  font-size: 18px;\n}\n\n@media screen and (min-width: 320px) {\n  h1 {\n    font-size: calc(18px + 56 * ((100vw - 320px) / 1880));\n  }\n}\n\n@media screen and (min-width: 2200px) {\n  h1 {\n    font-size: 74px;\n  }\n}\n\nbody {\n  background: #fff;\n}\n\n.testing {\n  color: #fff;\n}\n","@include fontface(f37, 'f37');\n\nh1 {\n    font-family: 'f37', sans-serif;\n    @include font-size-fluid($min_width, $max_width, $min_font, $max_font);\n}\n","body {\n  background: #fff;\n}\n","@import 'variables';\n@import 'mixins';\n@import 'fonts';\n@import 'layout';\n\n.testing {\n    color: #fff;\n}\n"]}